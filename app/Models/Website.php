<?php
namespace App\Models;

use Illuminate\Database\Eloquent\SoftDeletes;

class Website extends BaseModel
{
    use SoftDeletes;

    const PENDING = "\x70\x65\x6e\x64\x69\x6e\x67";
    const ACTIVE = "\x61\x63\x74\x69\x76\x65";
    const REJECTED = "\x72\x65\x6a\x65\x63\x74\x65\x64";
    const HOLD = "\x68\x6f\x6c\x64";

    protected $table = "\x77\x65\x62\x73\x69\x74\x65\x73";

    protected $fillable = [
        "\x75\x73\x65\x72\x5f\x69\x64",
        "\x77\x69\x64",
        "\x6e\x61\x6d\x65",
        "\x63\x61\x74\x65\x67\x6f\x72\x69\x65\x73",
        "\x70\x61\x72\x74\x6e\x65\x72\x5f\x74\x79\x70\x65\x73",
        "\x75\x72\x6c",
        "\x73\x74\x61\x74\x75\x73",
        "\x63\x6f\x75\x6e\x74\x72\x79",
        "\x6d\x6f\x6e\x74\x68\x6c\x79\x5f\x74\x72\x61\x66\x66\x69\x63",
        "\x6d\x6f\x6e\x74\x68\x6c\x79\x5f\x70\x61\x67\x65\x5f\x76\x69\x65\x77\x73",
        "\x6c\x6f\x67\x6f",
        "\x61\x70\x70\x5f\x6c\x6f\x67\x6f",
        "\x69\x6e\x74\x72\x6f"
    ];

    protected $dates = [
        "\x75\x70\x64\x61\x74\x65\x64\x5f\x61\x74",
        "\x63\x72\x65\x61\x74\x65\x64\x5f\x61\x74",
        "\x64\x65\x6c\x65\x74\x65\x64\x5f\x61\x74"
    ];

    protected $casts = [
        "\x63\x61\x74\x65\x67\x6f\x72\x69\x65\x73" => "array",
        "\x70\x61\x72\x74\x6e\x65\x72\x5f\x74\x79\x70\x65\x73" => "array"
    ];

    public function users()
    {
        return $this->belongsTo(User::class, "\x75\x73\x65\x72\x5f\x69\x64", "id");
    }

    public static function getCategoryList(): array
    {
        return [
            "\x46\x61\x6d\x69\x6c\x79\x2f\x42\x61\x62\x79",
            "\x43\x68\x61\x72\x69\x74\x61\x62\x6c\x65\x20\x4f\x72\x67\x61\x6e\x69\x7a\x61\x74\x69\x6f\x6e\x73",
            "\x4f\x72\x67\x61\x6e\x69\x63\x20\x26\x20\x45\x63\x6f\x2d\x46\x72\x69\x65\x6e\x64\x6c\x79",
            "\x44\x61\x74\x69\x6e\x67\x20\x26\x20\x52\x6f\x6d\x61\x6e\x63\x65",
            "\x44\x49\x59\x20\x26\x20\x43\x72\x61\x66\x74\x69\x6e\x67",
            "\x41\x72\x74\x20\x46\x20\x45\x6e\x74\x65\x72\x74\x61\x69\x6e\x6d\x65\x6e\x74",
            "\x47\x61\x6d\x69\x6e\x67",
            "\x4c\x75\x78\x75\x72\x79",
            "\x45\x64\x75\x63\x61\x74\x69\x6f\x6e",
            "\x50\x65\x74\x73",
            "\x4c\x69\x66\x65\x73\x74\x79\x6c\x65",
            "\x46\x61\x73\x68\x69\x6f\x6e",
            "\x41\x66\x66\x69\x6c\x69\x61\x74\x65\x20\x4c\x69\x6e\x6b",
            "\x46\x69\x6e\x61\x6e\x63\x69\x61\x6c\x20\x53\x65\x72\x76\x69\x63\x65\x73",
            "\x54\x72\x61\x76\x65\x6c\x20\x46\x20\x56\x61\x63\x61\x74\x69\x6f\x6e\x73",
            "\x53\x6f\x66\x74\x77\x61\x72\x65\x20\x26\x20\x49\x6e\x74\x65\x72\x6e\x65\x74",
            "\x43\x6f\x6d\x70\x75\x74\x65\x72\x20\x26\x20\x45\x6c\x65\x63\x74\x72\x6f\x6e\x69\x63\x73",
            "\x48\x6f\x6d\x65\x20\x26\x20\x4c\x69\x66\x69\x6e\x67",
            "\x4a\x65\x77\x65\x6c\x72\x79\x20\x26\x20\x57\x61\x74\x63\x68\x65\x73",
            "\x53\x70\x6f\x72\x74\x73\x20\x26\x20\x46\x69\x74\x6e\x65\x73\x73",
            "\x48\x65\x61\x6c\x74\x68\x20\x46\x20\x57\x65\x6c\x6c\x6e\x65\x73\x73",
            "\x46\x6f\x6f\x64\x20\x26\x20\x44\x72\x69\x6e\x6b",
            "\x53\x68\x6f\x65\x73\x20\x46\x20\x42\x61\x67\x73",
            "\x43\x6c\x6f\x74\x68\x69\x6e\x67\x20\x46\x20\x41\x63\x63\x65\x73\x73\x6f\x72\x69\x65\x73",
            "\x43\x6f\x73\x6d\x65\x74\x69\x63\x73\x20\x46\x20\x42\x65\x61\x75\x74\x79",
            "\x44\x65\x70\x61\x72\x74\x6d\x65\x6e\x74\x20\x53\x74\x6f\x72\x65\x73\x2f\x4d\x61\x6c\x73",
            "\x4f\x74\x68\x65\x72"
        ];
    }

    public static function getPartnerTypeList(): array
    {
        return [
            "\x43\x6f\x6e\x74\x65\x6e\x74\x2f\x42\x6c\x6f\x67",
            "\x43\x6f\x75\x70\x6f\x6e\x2f\x44\x65\x61\x6c",
            "\x53\x75\x62\x6e\x65\x74\x77\x6f\x72\x6b",
            "\x45\x2d\x6d\x61\x69\x6c",
            "\x43\x61\x73\x68\x62\x61\x63\x6b\x2f\x4c\x6f\x79\x61\x6c\x74\x79",
            "\x41\x70\x70\x2f\x42\x72\x6f\x77\x73\x65\x72\x20\x45\x78\x74\x65\x6e\x73\x69\x6f\x6e",
            "\x50\x72\x69\x63\x65\x20\x43\x6f\x6d\x70\x61\x72\x69\x73\x6f\x6e",
            "\x53\x65\x61\x72\x63\x68",
            "\x4d\x65\x64\x69\x61\x20\x42\x75\x79\x65\x72",
            "\x4f\x74\x68\x65\x72"
        ];
    }

    public function scopeWithAndWhereHas($query, $relation, $constraint)
    {
        return $query->whereHas($relation, $constraint)->with([$relation => $constraint]);
    }

    public function scopeWithAndWhereDoesntHave($query, $relation, $constraint)
    {
        return $query->whereDoesntHave($relation, $constraint)->with([$relation => $constraint]);
    }

    public function getCountry()
    {
        return $this->belongsTo(Country::class, "\x63\x6f\x75\x6e\x74\x72\x79");
    }
}
